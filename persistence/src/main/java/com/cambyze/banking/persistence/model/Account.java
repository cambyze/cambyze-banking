package com.cambyze.banking.persistence.model;

import java.math.BigDecimal;
import java.util.LinkedHashSet;
import java.util.Set;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.PostPersist;
import jakarta.persistence.Table;

/**
 * JPA entity for the bank account
 */
@Entity
@Table(name = "account")
public class Account {
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  private Long accountId;
  private String bankAccountNumber;
  private int accountType;
  private BigDecimal balanceAmount;
  private BigDecimal overdraftAmount;
  @OneToMany(fetch = FetchType.EAGER, mappedBy = "account", cascade = CascadeType.ALL)
  private Set<Operation> operations = new LinkedHashSet<Operation>();

  /**
   * <p>
   * The BAN depends on the id to be unique but the id is only known after the insertion, because it
   * is generated by Hibernate/mySQL
   * </p>
   * <p>
   * To persist it is needed to save the update !!! No time to find a better solution :(
   * </p>
   */
  @PostPersist
  private void postPersist() {
    this.bankAccountNumber = "CAMBYZEBANK-" + this.accountId;
  }


  /**
   * Create a new bank account as a everyday bank account
   */

  public Account() {
    super();
    this.accountType = Constants.ACCOUNT_TYPE_BANK;
    this.balanceAmount = BigDecimal.valueOf(0.0);
    this.overdraftAmount = BigDecimal.valueOf(0.0);
  }

  // Overriding toString() method for a better description
  @Override
  public String toString() {
    String desc = this.accountId + " : " + this.bankAccountNumber + " + " + this.accountType + " + "
        + this.balanceAmount + " + " + this.overdraftAmount;

    if (operations != null && operations.size() > 0) {
      desc = desc + " + " + this.operations.size() + " operations";
    } else {
      desc = desc + " + no operations";
    }
    return desc;
  }

  public Long getId() {
    return accountId;
  }

  public Long getBankAccountId() {
    return accountId;
  }


  public String getBankAccountNumber() {
    return bankAccountNumber;
  }

  public int getAccountType() {
    return accountType;
  }

  public BigDecimal getBalanceAmount() {
    return balanceAmount;
  }

  public BigDecimal getOverdraftAmount() {
    return overdraftAmount;
  }


  public Set<Operation> getBankingOperations() {
    return operations;
  }

}
